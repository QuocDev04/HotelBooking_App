require('dotenv').config();
const mongoose = require('mongoose');
const Admin = require('./src/models/People/AdminModel.js');

// Script ƒë·ªÉ c·∫≠p nh·∫≠t clerkId cho admin
// S·ª≠ d·ª•ng: node update_admin_clerkid.js <your_clerk_id>

const updateAdminClerkId = async () => {
    try {
        const newClerkId = process.argv[2];
        
        if (!newClerkId) {
            console.log('‚ùå Vui l√≤ng cung c·∫•p clerkId:');
            console.log('C√°ch s·ª≠ d·ª•ng: node update_admin_clerkid.js <your_clerk_id>');
            console.log('\nüìù ƒê·ªÉ l·∫•y clerkId c·ªßa b·∫°n:');
            console.log('1. M·ªü Developer Tools (F12) trong tr√¨nh duy·ªát');
            console.log('2. V√†o tab Console');
            console.log('3. Nh·∫≠p: window.Clerk.user.id');
            console.log('4. Copy clerkId v√† ch·∫°y l·∫°i script n√†y');
            process.exit(1);
        }
        
        await mongoose.connect(process.env.MONGODB_URI);
        console.log('‚úÖ K·∫øt n·ªëi MongoDB th√†nh c√¥ng');
        
        // T√¨m admin test v√† c·∫≠p nh·∫≠t clerkId
        const admin = await Admin.findOne({ email: 'admin@test.com' });
        
        if (!admin) {
            console.log('‚ùå Kh√¥ng t√¨m th·∫•y admin test');
            process.exit(1);
        }
        
        admin.clerkId = newClerkId;
        await admin.save();
        
        console.log('‚úÖ ƒê√£ c·∫≠p nh·∫≠t clerkId th√†nh c√¥ng!');
        console.log('üìã Th√¥ng tin admin:');
        console.log(`   - ClerkId: ${admin.clerkId}`);
        console.log(`   - Email: ${admin.email}`);
        console.log(`   - T√™n: ${admin.firstName} ${admin.lastName}`);
        
        await mongoose.disconnect();
        console.log('\nüéâ B√¢y gi·ªù b·∫°n c√≥ th·ªÉ truy c·∫≠p trang admin v√† xem th·ªëng k√™!');
        
    } catch (error) {
        console.error('‚ùå L·ªói:', error.message);
        process.exit(1);
    }
};

updateAdminClerkId();